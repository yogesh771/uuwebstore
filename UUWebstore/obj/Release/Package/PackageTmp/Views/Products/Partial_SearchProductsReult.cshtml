@model IEnumerable<UUWebstore.Models.getProductList_sp_Result>

<table class="table" id="tblData">
    <thead>
        <tr>
            <th>Sr</th>
          
            <th>
               product Name
            </th>
            <th>
             SKU
            </th>
            <th>
                Product Title
            </th>         
          
            <th>
               Active
            </th>
            
            <th>
                Image
            </th>
         
            <th>Featured</th>
        </tr>
    </thead>
    @{
        var a = Model.Count();

    }
    <tbody>
        @if (a == 0)
        {
            <tr>
                <td colspan="7">
                    No Result Found
                </td>
            </tr>
        }
        @{  int i = 0; }
        @foreach (var item in Model)
        {
            <tr><td>@(i += 1)</td>
               
                <td>
                    @Html.DisplayFor(modelItem => item.name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.sku)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.productTitle)
                </td>
             
                <td>
                    @Html.DisplayFor(modelItem => item.isActive)
                </td>
                <td>
                    <img src=@item.imgWebAddress height="100" width="90" />
                </td>  
              
                <td><input type="checkbox" id='chk_@item.productId' onclick="makeFeaturedProduct(@item.productId)" @(Convert.ToBoolean(@item.isFeaturedProduct) == true ? "checked='checked'" : string.Empty) /></td>
                             
            </tr>
        }
    </tbody>
</table>
<script>
    $(function () {
        $("#tblData").slimtable({
            tableData: null,
            dataUrl: null,
            itemsPerPage: 100,
            ipp_list: [10, 50, 100],
            colSettings: [],
            text1: "items/page",
            text2: "Loading...",
            sortStartCB: null,
            sortEndCB: null,
            aoColumnDefs: [{
                'bSortable': false,
                'aTargets': [-1] /* 1st one, start by the right */
            }]
        });
    });
</script>
<script>
    function makeFeaturedProduct(id)
    {
        var checkbox = document.getElementById('chk_' + id);
        var chk=false;
        if (checkbox.checked) {
            chk = true
        }
        debugger
        $.ajax({
            url: '/Products/makeFeaturedProduct',
            type: 'POST',
            data: { 'productId': id, 'chk': chk },
            success: function (data) {
                if (data)
                {
                    bootbox.alert({
                        title: "Success !",
                        message: chk == true ? '<p>Product updated as featured product.</p>' : '<p>Product removed from featured product.</p>',
                        timeOut: 2000

                    });
                }
            },
            error: function () {
                bootbox.alert({
                    title: "Alert !",
                    message: '<p>Whooaaa! Something went wrong..</p>',
                    timeOut: 2000

                });

            }
        });

    }
</script>