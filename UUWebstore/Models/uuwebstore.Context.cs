//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UUWebstore.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class sbv_uuwebstoreEntities : DbContext
    {
        public sbv_uuwebstoreEntities()
            : base("name=sbv_uuwebstoreEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ad> ads { get; set; }
        public virtual DbSet<adsSize> adsSizes { get; set; }
        public virtual DbSet<brandClient> brandClients { get; set; }
        public virtual DbSet<brand> brands { get; set; }
        public virtual DbSet<clientWebInformation> clientWebInformations { get; set; }
        public virtual DbSet<ClientWebsiteAdsInfo> ClientWebsiteAdsInfoes { get; set; }
        public virtual DbSet<ClientWebsiteBannerInfo> ClientWebsiteBannerInfoes { get; set; }
        public virtual DbSet<country> countries { get; set; }
        public virtual DbSet<enquiry> enquiries { get; set; }
        public virtual DbSet<fontFamily> fontFamilies { get; set; }
        public virtual DbSet<productAvailableSize> productAvailableSizes { get; set; }
        public virtual DbSet<productCategory> productCategories { get; set; }
        public virtual DbSet<productCategoryClient> productCategoryClients { get; set; }
        public virtual DbSet<productColor> productColors { get; set; }
        public virtual DbSet<productForClient> productForClients { get; set; }
        public virtual DbSet<productImage> productImages { get; set; }
        public virtual DbSet<ProductPrice> ProductPrices { get; set; }
        public virtual DbSet<productsCRA> productsCRAs { get; set; }
        public virtual DbSet<productVedio> productVedios { get; set; }
        public virtual DbSet<roleUser> roleUsers { get; set; }
        public virtual DbSet<state> states { get; set; }
        public virtual DbSet<supplierCategory> supplierCategories { get; set; }
        public virtual DbSet<supplierCategoryOption> supplierCategoryOptions { get; set; }
        public virtual DbSet<theme> themes { get; set; }
        public virtual DbSet<TodayOffer> TodayOffers { get; set; }
        public virtual DbSet<userRight> userRights { get; set; }
        public virtual DbSet<user> users { get; set; }
        public virtual DbSet<WebClientSupplier> WebClientSuppliers { get; set; }
        public virtual DbSet<banner> banners { get; set; }
        public virtual DbSet<sendGridDetail> sendGridDetails { get; set; }
    
        public virtual ObjectResult<sp_LoginUser_Result> sp_LoginUser(string password, string emailAddress)
        {
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var emailAddressParameter = emailAddress != null ?
                new ObjectParameter("emailAddress", emailAddress) :
                new ObjectParameter("emailAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_LoginUser_Result>("sp_LoginUser", passwordParameter, emailAddressParameter);
        }
    }
}
