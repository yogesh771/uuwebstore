@model UUWebstore.Models.user

@{
    ViewBag.Title = "Add_user";
    Layout = "~/Views/Shared/_LayoutInternal.cshtml";
}

@using (Html.BeginForm("Add_user","users")) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4  class="page-header">Add User</h4>
      
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        
        <div class="form-group">
            @Html.LabelFor(model => model.roleID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.roleID, new SelectList(ViewBag.roleID, "roleID", "name"), " Role ", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.roleID, "", new { @class = "text-danger" })
            </div>
        </div>  
        <div class="form-group">
            @Html.LabelFor(model => model.fullName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fullName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fullName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.userName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.userName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.userName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.mobile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.mobile, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.mobile, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.emailAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.emailAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.emailAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.website, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.website, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.website, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.location, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.location, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.location, "", new { @class = "text-danger" })
            </div>
        </div>

      
        <div class="form-group">
            @Html.LabelFor(model => model.countryId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.countryId, new SelectList(ViewBag.countryId, "countryId", "name"), " Country ", new { @class = "form-control", onChange = "fillState()" })
               
                @Html.ValidationMessageFor(model => model.countryId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.stateId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.stateId, new SelectList(ViewBag.stateId, "stateId", "name"), " State ", new { @class = "form-control", onChange = "fillCity()" })
                @Html.ValidationMessageFor(model => model.stateId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.cityId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.cityId, new SelectList(ViewBag.cityId, "cityId", "CityName"), " City ", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.cityId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.zipcode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.zipcode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.zipcode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.supplier_PPAI_ASI, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.supplier_PPAI_ASI, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.supplier_PPAI_ASI, "", new { @class = "text-danger" })
            </div>
        </div>
       
          
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "searchUser","users")
</div>
